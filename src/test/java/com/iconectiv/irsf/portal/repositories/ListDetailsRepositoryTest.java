package com.iconectiv.irsf.portal.repositories;import java.util.List;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.TestExecutionListeners;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import org.springframework.test.context.support.DependencyInjectionTestExecutionListener;import org.springframework.test.context.support.DirtiesContextTestExecutionListener;import org.springframework.test.context.transaction.TransactionalTestExecutionListener;import com.iconectiv.irsf.portal.config.CustomerContextHolder;import com.iconectiv.irsf.portal.model.customer.ListDetails;import com.iconectiv.irsf.portal.repositories.customer.ListDetailsRepository;import com.iconectiv.irsf.util.JsonHelper;/** * Created by echang on 1/12/2017. */@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(locations={"classpath:spring-cfg.xml", "classpath:spring-jpa.xml"})@TestExecutionListeners({ DependencyInjectionTestExecutionListener.class,        DirtiesContextTestExecutionListener.class,        TransactionalTestExecutionListener.class})public class ListDetailsRepositoryTest {    private static Logger log = LoggerFactory.getLogger(ListDetailsRepositoryTest.class);    @Autowired    private ListDetailsRepository lstDetailRepo;    @Before    public void setUp() throws Exception {    }    @Test    public void testQueryJoinByAllRequest() throws Exception {    	CustomerContextHolder.setSchema("cust01");    	List<ListDetails> results = lstDetailRepo.queryJoinByListRefId(1);    	log.info(JsonHelper.toPrettyJson(results));    	lstDetailRepo.findOne(1);    }    @Test    public void testQueryJoinByRangeRequest() throws Exception {    	CustomerContextHolder.setSchema("cust01");    	List<ListDetails> results = lstDetailRepo.queryJoinByListRefId(24, 1, 50);    	log.info(JsonHelper.toPrettyJson(results));;    }}