package com.iconectiv.irsf.portal.model.customer;
// Generated Mar 6, 2017 5:15:33 PM by Hibernate Tools 3.2.2.GA

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonRawValue;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.iconectiv.irsf.json.vaidation.JsonValidationException;
import com.iconectiv.irsf.portal.exception.AppException;
import com.iconectiv.irsf.portal.model.common.RangeQueryFilter;
import com.iconectiv.irsf.util.JsonHelper;

import javax.persistence.*;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.util.Date;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * RuleDefinition generated by hbm2java
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)

@Entity
@Table(name = "rule_definition")
public class RuleDefinition implements java.io.Serializable {
	private static Logger log = LoggerFactory.getLogger(RuleDefinition.class);
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Integer partitionId;
	private List<PartitionDefinition> partitions;
	private String dataSource;

	private String details;

	private String dialPatternType;
	private boolean active;

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
	private Date createTimestamp;
	private String createdBy;

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
	private Date lastUpdated;
	private String lastUpdatedBy;

	private RangeQueryFilter rangeQueryFilter;

	public RuleDefinition() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "partition_id")
	public Integer getPartitionId() {
		return partitionId;
	}

	public void setPartitionId(Integer partitionId) {
		this.partitionId = partitionId;
	}

	@Transient
	public List<PartitionDefinition> getPartitions() {
		return partitions;
	}

	public void setPartitions(List<PartitionDefinition> partitions) {
		this.partitions = partitions;
	}

	@Column(name = "data_source", nullable = false, length = 15)
	public String getDataSource() {
		return this.dataSource;
	}

	public void setDataSource(String dataSource) {
		this.dataSource = dataSource;
	}

	@Column(name = "details", nullable = false, length = 2000)
	public String getDetails() {
		return this.details;
	}

	@JsonSetter("details")
	public void setDetails(JsonNode details) {
		this.details = details.toString();
	}

	public void setDetails(String details) {
		this.details = details;
	}

	@Transient
	public RangeQueryFilter getRangeQueryFilter() throws AppException {
		if (this.details != null) {			
			try {
				this.rangeQueryFilter = new ObjectMapper().readValue(this.details, RangeQueryFilter.class);
			} catch (Exception e) {
				log.error("Error to parse Json string: ", e.getMessage());
				throw new AppException(e);
			}
		}
		return rangeQueryFilter;
	}

	public void setRangeQueryFilter(RangeQueryFilter rangeQueryFilter) {
		this.rangeQueryFilter = rangeQueryFilter;
	}

	@Column(name = "dial_pattern_type", length = 8)
	public String getDialPatternType() {
		return this.dialPatternType;
	}

	public void setDialPatternType(String dialPatternType) {
		this.dialPatternType = dialPatternType;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_timestamp", nullable = false, length = 19)
	public Date getCreateTimestamp() {
		return this.createTimestamp;
	}

	public void setCreateTimestamp(Date createTimestamp) {
		this.createTimestamp = createTimestamp;
	}

	@Column(name = "created_by", nullable = false, length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", nullable = false, length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "last_updated_by", nullable = false, length = 45)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
